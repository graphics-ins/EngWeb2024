var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')



function genFilmes(filmes){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Lista de Filmes</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Filmes</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <th>Título</th>
                    </tr>
                    `;
    
    filmes.forEach(ocorr => {
        pagHTML += `
        <tr>
            <td><a href='/filmes/${ocorr.id}'>${ocorr.id}</a></td>
            <td>${ocorr.title}</td>
        </tr>
        `;
    });

    pagHTML += ` 
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `;

    return pagHTML;
}


function genFilme(film){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filme</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Filme "${film.title}"</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <th>${film.id["$oid"]}</th>
                    </tr>
                        <th>Título</th>
                        <td>${film.title}</td>
                    </tr>
                        <th>Ano</th>
                        <td>${film.year}</td>
                    </tr>
                        <th>Cast</th>
                        <td>${film.cast}</td>
                    </tr>
                        <th>Genero</th>
                        <td>${film.gen}</td>
                    </tr>
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `

    return pagHTML
}


function genAtores(atores){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Lista de Atores</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Atores</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <th>Nome</th>
                    </tr>
                    `
    atores.forEach( ator => {
        pagHTML += `
        <tr>
            <td><a href='/atores/${ator.id}'>${ator.id}</a></td>
            <td>${ator.ator}</td>
        </tr>
        `
    });

    pagHTML += ` 
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `

    return pagHTML
}

function genAtor(act){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filme</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>"${act.ator}"</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <th>${act.id}</th>
                    </tr>
                        <th>Nome</th>
                        <td>${act.ator}</td>
                    </tr>
                        <th>Cinematografia</th>
                    `
       act.filmes.forEach( f => {
        pagHTML += `
        <tr>
            <td>${f}</td>
        </tr>
        `
    }); 


    
    pagHTML += `
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `

    return pagHTML
}

function genGeneros(generos){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Lista de Generos</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>Lista de Generos</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <th></th>
                    </tr>
                    `
    generos.forEach( gen => {
        pagHTML += `
        <tr>
            <td><a href='/generos/${gen.id}'>${gen.id}</a></td>
            <td>${gen.genero}</td>
        </tr>
        `
    });

    pagHTML += ` 
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `

    return pagHTML
}

function genGenero(gen){
    pagHTML = `
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Filme</title>
        <link rel="stylesheet" href="/w3.css"/>
    </head>
    <body>
        <div class ="w3-card-4">
            <header class="w3-container w3-blue">
                <h1>"${gen.genero}"</h1>
            </header>
    
            <div class="w3-container">
                <table class="w3.css">
                    <tr>
                        <th>Identificador</th>
                        <td>${gen.id}</td>
                    </tr>
                        <th>Nome</th>
                        <td>${gen.genero}</td>
                    </tr>
                        <th>Filmes</th>
                    `
        for (const f of gen.filmes) {
            pagHTML += `
        <tr>
            <td>${f}</td>
        </tr>
        `
        }

        pagHTML +=  `
    </table>
        </div>
        <footer class="w3-container w3-blue">
            <h5>Generated by EngWeb2024</h5>
        </footer>
        </div>
        </body>
    </html>
    `

    return pagHTML
}

http.createServer(function (req, res) {
    var regex_filmes = /^\/filmes\/[a-z0-9]+$/
    var regex_atores = /^\/atores\/a[0-9]+$/
    var regex_generos = /^\/generos\/g[0-9]+$/
    var q = url.parse(req.url,true)

    if(q.pathname == '/'){
        fs.readFile('pagPrinc.html', function(erro, dados){
            res.writeHead(200, {'Content-Type': 'text/html'})
            res.write(dados)
            res.end()
        })
    }
    else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
            .then(function(resp){
                dados = resp.data
                pagHTML_filmes = genFilmes(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML_filmes)
                res.end()
            })
            .catch(function(erro)
            {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + erro + '</pre>')
                res.end()
            })
    }
    else if(regex_filmes.test(q.pathname)){
            axios.get('http://localhost:3000' + q.pathname)
                .then( function(resp){
                    dados = resp.data
                    pagHTML = genFilme(dados)
                    res.writeHead(200, {'Content-Type': 'text/html'})
                    res.write(pagHTML)
                    res.end()
                })
                .catch(function(erro)
                {
                    res.writeHead(500, {'Content-Type': 'text/html'})
                    res.write('<pre>' + erro + '</pre>')
                    res.end()
                })
            }
    else if(q.pathname == '/atores'){
        axios.get('http://localhost:3000/atores')
            .then(function(resp){
                dados = resp.data
                pagHTML_atores = genAtores(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML_atores)
                res.end()
            })
            .catch(function(erro)
            {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + erro + '</pre>')
                res.end()
            })
        }
    else if(regex_atores.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then( function(resp){
                dados = resp.data
                pagHTML = genAtor(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro)
            {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + erro + '</pre>')
                res.end()
            })
        }
    else if(q.pathname == '/generos'){
        axios.get('http://localhost:3000/generos')
            .then(function(resp){
                dados = resp.data
                pagHTML_generos = genGeneros(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML_generos)
                res.end()
            })
            .catch(function(erro)
            {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + erro + '</pre>')
                res.end()
            })
        }
    else if(regex_generos.test(q.pathname)){
        axios.get('http://localhost:3000' + q.pathname)
            .then( function(resp){
                dados = resp.data
                pagHTML = genGenero(dados)
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(pagHTML)
                res.end()
            })
            .catch(function(erro)
            {
                res.writeHead(500, {'Content-Type': 'text/html'})
                res.write('<pre>' + erro + '</pre>')
                res.end()
            })
        }
    else if(q.pathname == '/w3.css'){
        fs.readFile('w3.css', function(erro,dados){
        res.writeHead(200, {'Content-Type': 'text/css'})
        res.write(dados)
        res.end()
    })
}
    else{
        res.writeHead(400, {'Content-Type': 'text/html charset=utf-8'})
        res.write('<p>Erro: pedido não suportado.</p>')
        res.write('<pre>' + q.pathname + '</pre>')
        res.end()
    }
    console.log(q.pathname)
}).listen(7777);